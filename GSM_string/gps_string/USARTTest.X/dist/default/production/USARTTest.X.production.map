Microchip MPLAB XC8 Compiler V1.34 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.34\dat\en_msgs.txt -cs \
  -h+dist/default/production\USARTTest.X.production.sym \
  --cmf=dist/default/production\USARTTest.X.production.cmf -z -Q16F887 \
  -oC:\Users\PARAS~1.SHA\AppData\Local\Temp\s5e4.6 \
  -Mdist/default/production/USARTTest.X.production.map -E1 -ver=XC8 \
  -ASTACK=0110h-016fh -pstack=STACK -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh \
  -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\PARAS~1.SHA\AppData\Local\Temp\s5e4.obj \
  dist/default/production\USARTTest.X.production.obj 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\PARAS~1.SHA\AppData\Local\Temp\s5e4.obj
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2     400E       0
dist/default/production\USARTTest.X.production.obj
                cinit                                15       15       1D        8       0
                intentry                              4        4        E        8       0
                text15                              20C      20C       45        8       0
                text14                              3AC      3AC       1A      594       0
                text13                              3E8      3E8       10      594       0
                text12                              2CA      2CA       2E      594       0
                text11                              40B      40B        9      594       0
                text10                              3D7      3D7       11      594       0
                text9                               2F8      2F8       29      594       0
                text8                               402      402        9      594       0
                text7                               38C      38C       20      594       0
                text6                               369      369       23      594       0
                text5                               1C4      1C4       48        8       0
                text4                               346      346       23      594       0
                text3                               41C      41C        8      594       0
                text2                               321      321       25      594       0
                text1                               251      251       3E        8       0
                maintext                             32       32      192        8       0
                cstackBANK0                          20       20       2C       20       1
                cstackCOMMON                         70       70        9       70       1
                inittext                            3C6      3C6       11      594       0
                clrtext                             414      414        8      594       0
                bssBANK1                             A0       A0       40       A0       1
                dataBANK0                            4C       4C        A       20       1
                bssBANK0                             56       56        5       20       1
                strings                             28F      28F       3B      51E       0
                nvCOMMON                             79       79        2       70       1
                idataBANK0                          3F8      3F8        A      594       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       1D         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text15                              20C      20C       45         0
                text14                              3AC      3AC       1A         0
                text13                              3E8      3E8       10         0
                text12                              2CA      2CA       2E         0
                text11                              40B      40B        9         0
                text10                              3D7      3D7       11         0
                text9                               2F8      2F8       29         0
                text8                               402      402        9         0
                text7                               38C      38C       20         0
                text6                               369      369       23         0
                text5                               1C4      1C4       48         0
                text4                               346      346       23         0
                text3                               41C      41C        8         0
                text2                               321      321       25         0
                text1                               251      251       3E         0
                maintext                             32       32      192         0
                inittext                            3C6      3C6       11         0
                clrtext                             414      414        8         0
                idataBANK0                          3F8      3F8        A         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             28F      28F       3B         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        9         1
                nvCOMMON                             79       79        2         1

        CLASS   BANK0          
                cstackBANK0                          20       20       2C         1
                dataBANK0                            4C       4C        A         1
                bssBANK0                             56       56        5         1

        CLASS   BANK1          
                bssBANK1                             A0       A0       40         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  00028B  00028F         8       0  CODE        2
                cstackBANK0                    000020  00003B  00005B        20       1  BANK0       1
                cstackCOMMON                   000070  00000B  00007B        70       1  COMMON      1
                bssBANK1                       0000A0  000040  0000E0        A0       1  BANK1       1
                strings                        00028F  00003B  0002CA       51E       0  STRING      2
                text12                         0002CA  00015A  000424       594       0  CODE        2
                config                         002007  000002  002009      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            005B-006F             15           1
        BANK1            00E0-00EF             10           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         0424-1FFF            800
        COMMON           007B-007D              3           1
        CONST            0003-0003              1           2
                         0424-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         0424-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              005B-006F             15           1
                         00E0-00EF             10
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         0424-1FFF           1BDC
        STRING           0003-0003              1           2
                         0424-1FFF            100

                                  Symbol Table

?_strncmp                    cstackBANK0  0020
LCDWriteByte@LCDData         cstackBANK0  0024
LCDWriteCommand@LCDData      cstackBANK0  0025
LCDWriteData@LCDData         cstackBANK0  0025
LCDWriteString@lcd_string    cstackBANK0  0027
USARTHandleRxInt@data        cstackCOMMON 0074
USARTInit@baud_rate          cstackBANK0  0020
USARTReadData@data           cstackBANK0  0021
USARTWriteChar@ch            cstackBANK0  0020
USARTWriteInt@F1700          bssBANK0     0056
USARTWriteString@str         cstackBANK0  0021
_GIE                         (abs)        005F
_ISR                         text14       03AC
_LCDEnable                   text13       03E8
_LCDInitialize               text9        02F8
_LCDReset                    text10       03D7
_LCDWriteByte                text12       02CA
_LCDWriteCommand             text11       040B
_LCDWriteData                text8        0402
_LCDWriteString              text7        038C
_PEIE                        (abs)        005E
_PIR1bits                    (abs)        000C
_PORTCbits                   (abs)        0007
_PORTD                       (abs)        0008
_RB1                         (abs)        0031
_RC4                         (abs)        003C
_RCIE                        (abs)        0465
_RCIF                        (abs)        0065
_RCREG                       (abs)        001A
_RCSTAbits                   (abs)        0018
_RD2                         (abs)        0042
_RD3                         (abs)        0043
_SPBRG                       (abs)        0099
_TRISCbits                   (abs)        0087
_TRISD                       (abs)        0088
_TXREG                       (abs)        0019
_TXSTAbits                   (abs)        0098
_UQEnd                       nvCOMMON     0079
_UQFront                     nvCOMMON     007A
_URBuff                      bssBANK1     00A0
_USARTDataAvailable          text6        0369
_USARTHandleRxInt            text15       020C
_USARTInit                   text5        01C4
_USARTReadData               text4        0346
_USARTWriteChar              text3        041C
_USARTWriteString            text2        0321
__CFG_BOR4V$BOR21V           (abs)        0000
__CFG_BOREN$ON               (abs)        0000
__CFG_CP$OFF                 (abs)        0000
__CFG_CPD$OFF                (abs)        0000
__CFG_FCMEN$ON               (abs)        0000
__CFG_FOSC$HS                (abs)        0000
__CFG_IESO$ON                (abs)        0000
__CFG_LVP$OFF                (abs)        0000
__CFG_MCLRE$ON               (abs)        0000
__CFG_PWRTE$ON               (abs)        0000
__CFG_WDTE$OFF               (abs)        0000
__CFG_WRT$OFF                (abs)        0000
__Habs1                      abs1         0000
__Hbank0                     bank0        0000
__Hbank1                     bank1        0000
__Hbank2                     bank2        0000
__Hbank3                     bank3        0000
__HbssBANK0                  bssBANK0     0000
__HbssBANK1                  bssBANK1     0000
__Hcinit                     cinit        0032
__Hclrtext                   clrtext      0000
__Hcode                      code         0000
__Hcommon                    common       0000
__Hconfig                    config       2009
__HcstackBANK0               cstackBANK0  0000
__HcstackCOMMON              cstackCOMMON 0000
__HdataBANK0                 dataBANK0    0000
__Heeprom_data               eeprom_data  0000
__Hend_init                  end_init     0015
__Hfunctab                   functab      0000
__HidataBANK0                idataBANK0   0000
__Hidloc                     idloc        0000
__Hinit                      init         0012
__Hinittext                  inittext     0000
__Hintentry                  intentry     0012
__Hmaintext                  maintext     0000
__HnvCOMMON                  nvCOMMON     0000
__Hpowerup                   powerup      0000
__Hram                       ram          0000
__Hreset_vec                 reset_vec    0003
__Hsfr0                      sfr0         0000
__Hsfr1                      sfr1         0000
__Hsfr2                      sfr2         0000
__Hsfr3                      sfr3         0000
__Hspace_0                   (abs)        2009
__Hspace_1                   (abs)        00E0
__Hspace_2                   (abs)        0000
__Hspace_3                   (abs)        0000
__Hstack                     stack        0000
__Hstrings                   strings      0000
__Htext                      text         0000
__Labs1                      abs1         0000
__Lbank0                     bank0        0000
__Lbank1                     bank1        0000
__Lbank2                     bank2        0000
__Lbank3                     bank3        0000
__LbssBANK0                  bssBANK0     0000
__LbssBANK1                  bssBANK1     0000
__Lcinit                     cinit        0015
__Lclrtext                   clrtext      0000
__Lcode                      code         0000
__Lcommon                    common       0000
__Lconfig                    config       2007
__LcstackBANK0               cstackBANK0  0000
__LcstackCOMMON              cstackCOMMON 0000
__LdataBANK0                 dataBANK0    0000
__Leeprom_data               eeprom_data  0000
__Lend_init                  end_init     0012
__Lfunctab                   functab      0000
__LidataBANK0                idataBANK0   0000
__Lidloc                     idloc        0000
__Linit                      init         0012
__Linittext                  inittext     0000
__Lintentry                  intentry     0004
__Lmaintext                  maintext     0000
__LnvCOMMON                  nvCOMMON     0000
__Lpowerup                   powerup      0000
__Lram                       ram          0000
__Lreset_vec                 reset_vec    0000
__Lsfr0                      sfr0         0000
__Lsfr1                      sfr1         0000
__Lsfr2                      sfr2         0000
__Lsfr3                      sfr3         0000
__Lspace_0                   (abs)        0000
__Lspace_1                   (abs)        0000
__Lspace_2                   (abs)        0000
__Lspace_3                   (abs)        0000
__Lstack                     stack        0000
__Lstrings                   strings      0000
__Ltext                      text         0000
__S0                         (abs)        2009
__S1                         (abs)        00E0
__S2                         (abs)        0000
__S3                         (abs)        0000
___int_sp                    stack        0000
___latbits                   (abs)        0002
___sp                        stack        0000
__end_of_ISR                 text14       03C6
__end_of_LCDEnable           text13       03F8
__end_of_LCDInitialize       text9        0321
__end_of_LCDReset            text10       03E8
__end_of_LCDWriteByte        text12       02F8
__end_of_LCDWriteCommand     text11       0414
__end_of_LCDWriteData        text8        040B
__end_of_LCDWriteString      text7        03AC
__end_of_USARTDataAvailable  text6        038C
__end_of_USARTHandleRxInt    text15       0251
__end_of_USARTInit           text5        020C
__end_of_USARTReadData       text4        0369
__end_of_USARTWriteChar      text3        0424
__end_of_USARTWriteString    text2        0346
__end_of__initialization     cinit        002E
__end_of__stringtab          strings      029F
__end_of_main                maintext     01C4
__end_of_strncmp             text1        028F
__initialization             cinit        0015
__pbssBANK0                  bssBANK0     0056
__pbssBANK1                  bssBANK1     00A0
__pcstackBANK0               cstackBANK0  0020
__pcstackCOMMON              cstackCOMMON 0070
__pdataBANK0                 dataBANK0    004C
__pidataBANK0                idataBANK0   03F8
__pintentry                  intentry     0004
__pmaintext                  maintext     0032
__pnvCOMMON                  nvCOMMON     0079
__pstrings                   strings      028F
__ptext1                     text1        0251
__ptext10                    text10       03D7
__ptext11                    text11       040B
__ptext12                    text12       02CA
__ptext13                    text13       03E8
__ptext14                    text14       03AC
__ptext15                    text15       020C
__ptext2                     text2        0321
__ptext3                     text3        041C
__ptext4                     text4        0346
__ptext5                     text5        01C4
__ptext6                     text6        0369
__ptext7                     text7        038C
__ptext8                     text8        0402
__ptext9                     text9        02F8
__size_of_ISR                (abs)        0000
__size_of_LCDEnable          (abs)        0000
__size_of_LCDInitialize      (abs)        0000
__size_of_LCDReset           (abs)        0000
__size_of_LCDWriteByte       (abs)        0000
__size_of_LCDWriteCommand    (abs)        0000
__size_of_LCDWriteData       (abs)        0000
__size_of_LCDWriteString     (abs)        0000
__size_of_USARTDataAvailable (abs)        0000
__size_of_USARTHandleRxInt   (abs)        0000
__size_of_USARTInit          (abs)        0000
__size_of_USARTReadData      (abs)        0000
__size_of_USARTWriteChar     (abs)        0000
__size_of_USARTWriteString   (abs)        0000
__size_of_main               (abs)        0000
__size_of_strncmp            (abs)        0000
__stringbase                 strings      029E
__stringtab                  strings      028F
_main                        maintext     0032
_strncmp                     text1        0251
btemp                        (abs)        007E
clear_ram0                   clrtext      0414
end_of_initialization        cinit        002E
init_fetch0                  inittext     03C6
init_ram0                    inittext     03CA
interrupt_function           intentry     0004
intlevel0                    functab      0000
intlevel1                    functab      0000
intlevel2                    functab      0000
intlevel3                    functab      0000
intlevel4                    functab      0000
intlevel5                    functab      0000
ltemp                        (abs)        007E
ltemp0                       (abs)        007E
ltemp1                       (abs)        0082
ltemp2                       (abs)        0086
ltemp3                       (abs)        0080
main@F2190                   dataBANK0    004C
main@ch                      cstackBANK0  004B
main@i                       cstackBANK0  0040
main@j                       cstackBANK0  0045
main@k                       cstackBANK0  0049
main@m                       cstackBANK0  0036
main@mflag                   cstackBANK0  0043
main@n                       cstackBANK0  0042
main@p                       cstackBANK0  002C
main@x                       cstackBANK0  0047
reset_vec                    reset_vec    0000
saved_w                      (abs)        007E
stackhi                      (abs)        0000
stacklo                      (abs)        0000
start                        init         0012
start_initialization         cinit        0015
strncmp@len                  cstackBANK0  0021
strncmp@s1                   cstackBANK0  0025
strncmp@s2                   cstackBANK0  0020
ttemp                        (abs)        007E
ttemp0                       (abs)        007E
ttemp1                       (abs)        0081
ttemp2                       (abs)        0084
ttemp3                       (abs)        0087
ttemp4                       (abs)        007F
wtemp                        (abs)        007E
wtemp0                       (abs)        007E
wtemp1                       (abs)        0080
wtemp2                       (abs)        0082
wtemp3                       (abs)        0084
wtemp4                       (abs)        0086
wtemp5                       (abs)        0088
wtemp6                       (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 54 in file "usart_test.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  x               2   39[BANK0 ] int 
  ch              1   43[BANK0 ] unsigned char 
  n               1   34[BANK0 ] unsigned char 
  m              10   22[BANK0 ] unsigned char [10]
  p              10   12[BANK0 ] unsigned char [10]
  k               2   41[BANK0 ] unsigned int 
  j               2   37[BANK0 ] unsigned int 
  mflag           2   35[BANK0 ] unsigned int 
  i               2   32[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      32       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      36       0       0       0
Total ram usage:       36 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_LCDEnable
		_LCDInitialize
		_LCDWriteCommand
		_LCDWriteData
		_LCDWriteString
		_USARTDataAvailable
		_USARTInit
		_USARTReadData
		_USARTWriteChar
		_USARTWriteString
		_strncmp
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _strncmp *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strncmp.c"
 Parameters:    Size  Location     Type
  s1              1    wreg     PTR const unsigned char 
		 -> main@m(10), 
  s2              1    0[BANK0 ] PTR const unsigned char 
		 -> main@p(10), 
  len             2    1[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  s1              1    5[BANK0 ] PTR const unsigned char 
		 -> main@m(10), 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _USARTWriteString *****************
 Defined at:
		line 76 in file "usart_pic16.c"
 Parameters:    Size  Location     Type
  str             2    1[BANK0 ] PTR const unsigned char 
		 -> STR_4(8), STR_3(3), main@m(10), STR_2(27), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_USARTWriteChar
 This function is called by:
		_main
		_USARTWriteLine
 This function uses a non-reentrant model


 *************** function _USARTWriteChar *****************
 Defined at:
		line 69 in file "usart_pic16.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  ch              1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_USARTWriteString
		_main
		_USARTWriteLine
		_USARTWriteInt
		_USARTGotoNewLine
 This function uses a non-reentrant model


 *************** function _USARTReadData *****************
 Defined at:
		line 122 in file "usart_pic16.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  data            1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_USARTReadBuffer
		_USARTFlushBuffer
 This function uses a non-reentrant model


 *************** function _USARTInit *****************
 Defined at:
		line 29 in file "usart_pic16.c"
 Parameters:    Size  Location     Type
  baud_rate       2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _USARTDataAvailable *****************
 Defined at:
		line 149 in file "usart_pic16.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_USARTFlushBuffer
 This function uses a non-reentrant model


 *************** function _LCDWriteString *****************
 Defined at:
		line 46 in file "LCD.c"
 Parameters:    Size  Location     Type
  lcd_string      1    wreg     PTR const unsigned char 
		 -> STR_1(8), 
 Auto vars:     Size  Location     Type
  lcd_string      1    7[BANK0 ] PTR const unsigned char 
		 -> STR_1(8), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCDWriteData
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCDWriteData *****************
 Defined at:
		line 40 in file "LCD.c"
 Parameters:    Size  Location     Type
  LCDData         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  LCDData         1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCDWriteByte
 This function is called by:
		_main
		_LCDWriteString
		_LCDWriteString1
		_LCDWriteStringWithLength
		_LCDDisplayByte
 This function uses a non-reentrant model


 *************** function _LCDInitialize *****************
 Defined at:
		line 68 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCDReset
		_LCDWriteCommand
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCDReset *****************
 Defined at:
		line 82 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCDWriteCommand
 This function is called by:
		_LCDInitialize
 This function uses a non-reentrant model


 *************** function _LCDWriteCommand *****************
 Defined at:
		line 34 in file "LCD.c"
 Parameters:    Size  Location     Type
  LCDData         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  LCDData         1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCDWriteByte
 This function is called by:
		_main
		_LCDInitialize
		_LCDReset
		_LCDDisplayByte
 This function uses a non-reentrant model


 *************** function _LCDWriteByte *****************
 Defined at:
		line 89 in file "LCD.c"
 Parameters:    Size  Location     Type
  LCDData         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  LCDData         1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCDEnable
 This function is called by:
		_LCDWriteCommand
		_LCDWriteData
 This function uses a non-reentrant model


 *************** function _LCDEnable *****************
 Defined at:
		line 28 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_LCDWriteByte
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 29 in file "isr.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          4       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_USARTHandleRxInt
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _USARTHandleRxInt *****************
 Defined at:
		line 93 in file "usart_pic16.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  data            1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          4       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strncmp.c
		_strncmp       		CODE           	0251	0000	63

C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strncmp.c estimated size: 63

usart_test.c
		_main          		CODE           	0032	0000	403

usart_test.c estimated size: 403

usart_pic16.c
		_USARTWriteStri		CODE           	0321	0000	38
		_USARTDataAvail		CODE           	0369	0000	36
		_USARTWriteChar		CODE           	041C	0000	9
		_USARTHandleRxI		CODE           	020C	0000	70
		_USARTInit     		CODE           	01C4	0000	73
		_USARTReadData 		CODE           	0346	0000	36

usart_pic16.c estimated size: 262

isr.c
		_ISR           		CODE           	03AC	0000	27

isr.c estimated size: 27

shared
		__stringtab    		STRING         	028F	0000	17
		__initializatio		CODE           	0015	0000	26

shared estimated size: 43

LCD.c
		_LCDWriteData  		CODE           	0402	0000	10
		_LCDWriteByte  		CODE           	02CA	0000	47
		_LCDInitialize 		CODE           	02F8	0000	42
		_LCDWriteString		CODE           	038C	0000	33
		_LCDReset      		CODE           	03D7	0000	18
		_LCDWriteComman		CODE           	040B	0000	10
		_LCDEnable     		CODE           	03E8	0000	17

LCD.c estimated size: 177

